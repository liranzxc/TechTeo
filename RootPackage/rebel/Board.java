/*
* This code has been generated by the Rebel: a code generator for modern Java.
* 
* For more details, please visit www.archetypesoftware.com.
*
* Drop us a line or two at feedback@archetypesoftware.com. We would love to hear from you.
*/
package rebel;

import java.util.*;
import java.time.*;



// ----------- << imports@AAAAAAFqELsJ8hmDoVA= >>
// ----------- >>

// ----------- << class.annotations@AAAAAAFqELsJ8hmDoVA= >>
// ----------- >>
public class Board {
  // ----------- << attribute.annotations@AAAAAAFqX9iAh+NW4m0= >>
  // ----------- >>
  private rubricMap Rubrics;

  // ----------- << attribute.annotations@AAAAAAFqEL62BRnZXjU= >>
  // ----------- >>
  private Set<Rubic> rubic = new HashSet<>();

  // ----------- << attribute.annotations@AAAAAAFqWXWqIXIsBCQ= >>
  // ----------- >>
  private Rubic ;

  // ----------- << attribute.annotations@AAAAAAFqX9ydX+ke8GE= >>
  // ----------- >>
  private Set<Rubic> rubic = new HashSet<>();

  // ----------- << attribute.annotations@AAAAAAFqEMMnqRujebw= >>
  // ----------- >>
  private Set<Players> players = new HashSet<>();

  public rubricMap getRubrics() {
    return Rubrics;
  }

  public Set<Rubic> getRubic() {
    return rubic;
  }

  public Rubic get() {
    return ;
  }

  public Set<Rubic> getRubic() {
    return rubic;
  }

  public Set<Players> getPlayers() {
    return players;
  }

  public void setRubrics(rubricMap Rubrics) {
    this.Rubrics = Rubrics;
  }

  public void set(Rubic ) {
    this. = ;
  }

  public void linkRubic(Rubic _rubic) {
    if (_rubic != null) {
      _rubic.unlinkBoard();
      _rubic.setBoard(this);
      getRubic().add(_rubic);
    }
  }

  public void link(Rubic _) {
    if (_ != null) {
      _.unlink();
      _.set(this);
    }

    unlink();
    set(_);
  }

  public void linkRubic(Rubic _rubic) {
    if (_rubic != null) {
      _rubic.unlinkBoard();
      _rubic.setBoard(this);
      getRubic().add(_rubic);
    }
  }

  public void linkPlayers(Players _players) {
    if (_players != null) {
      _players.unlinkBoard();
      _players.setBoard(this);
      getPlayers().add(_players);
    }
  }

  public void unlinkRubic(Rubic _rubic) {
    if (_rubic != null) {
      _rubic.setBoard(null);
      getRubic().remove(_rubic);
    }
  }

  public void unlinkRubic(Rubic _rubic, Iterator<Rubic> it) {
    if (_rubic != null) {
      _rubic.setBoard(null);
      it.remove();
    }
  }

  public void unlink() {
    if (get() != null) {
      get().set(null);
      set(null);
    }
  }

  public void unlinkRubic(Rubic _rubic) {
    if (_rubic != null) {
      _rubic.setBoard(null);
      getRubic().remove(_rubic);
    }
  }

  public void unlinkRubic(Rubic _rubic, Iterator<Rubic> it) {
    if (_rubic != null) {
      _rubic.setBoard(null);
      it.remove();
    }
  }

  public void unlinkPlayers(Players _players) {
    if (_players != null) {
      _players.setBoard(null);
      getPlayers().remove(_players);
    }
  }

  public void unlinkPlayers(Players _players, Iterator<Players> it) {
    if (_players != null) {
      _players.setBoard(null);
      it.remove();
    }
  }

  // ----------- << method.annotations@AAAAAAFqEOVVNSLGnOo= >>
  // ----------- >>
  public void RegisterMove() {
  // ----------- << method.body@AAAAAAFqEOVVNSLGnOo= >>
  // ----------- >>
  }
  // ----------- << method.annotations@AAAAAAFqX9pqfOYlviw= >>
  // ----------- >>
  public void GetRubricesMap() {
  // ----------- << method.body@AAAAAAFqX9pqfOYlviw= >>
  // ----------- >>
  }
// ----------- << class.extras@AAAAAAFqELsJ8hmDoVA= >>
// ----------- >>
}